import { Result, FxError } from "@microsoft/teamsfx-api";
import { StepDriver, ExecutionResult } from "../interface/stepDriver";
import { DriverContext } from "../interface/commonArgs";
import { WrapDriverContext } from "../util/wrapUtil";
import { ValidateWithTestCasesArgs } from "./interfaces/ValidateWithTestCasesArgs";
import { AsyncAppValidationResponse } from "./interfaces/AsyncAppValidationResponse";
export declare class ValidateWithTestCasesDriver implements StepDriver {
    description: string;
    readonly progressTitle: string;
    execute(args: ValidateWithTestCasesArgs, context: DriverContext): Promise<ExecutionResult>;
    validate(args: ValidateWithTestCasesArgs, context: WrapDriverContext): Promise<Result<Map<string, string>, FxError>>;
    /**
     * Periodically check the result until it's completed or aborted
     * @param args
     * @param context
     * @param appStudioToken
     * @param response
     * @param teamsAppId
     */
    runningBackgroundJob(args: ValidateWithTestCasesArgs, context: WrapDriverContext, appStudioToken: string, response: AsyncAppValidationResponse, teamsAppId: string): Promise<void>;
    /**
     * Evaluate the validation results and log the summary
     * @param args
     * @param context
     * @param resultResp
     * @param teamsAppId
     */
    private evaluateValidationResults;
    private validateArgs;
}
//# sourceMappingURL=validateTestCases.d.ts.map