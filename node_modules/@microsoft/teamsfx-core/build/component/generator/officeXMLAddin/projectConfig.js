"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOfficeAddinTemplateConfig = exports.OfficeAddinProjectConfig = void 0;
const question_1 = require("../../../question");
const CommonProjectConfig = {
    taskpane: {
        title: "core.createProjectQuestion.officeXMLAddin.taskpane.title",
        detail: "core.createProjectQuestion.officeXMLAddin.taskpane.detail",
        framework: {
            default: {
                typescript: "https://aka.ms/ccdevx-fx-taskpane-ts",
                javascript: "https://aka.ms/ccdevx-fx-taskpane-js",
            },
        },
    },
    sso: {
        framework: {
            default: {
                typescript: "https://aka.ms/ccdevx-fx-sso-ts",
                javascript: "https://aka.ms/ccdevx-fx-sso-js",
            },
        },
    },
    react: {
        framework: {
            default: {
                typescript: "https://aka.ms/ccdevx-fx-react-ts",
                javascript: "https://aka.ms/ccdevx-fx-react-js",
            },
        },
    },
    manifest: {
        title: "core.createProjectQuestion.officeXMLAddin.manifestOnly.title",
        detail: "core.createProjectQuestion.officeXMLAddin.manifestOnly.detail",
        framework: {
            default: {},
        },
    },
};
exports.OfficeAddinProjectConfig = {
    json: {
        "json-taskpane": {
            title: "core.newTaskpaneAddin.label",
            detail: "core.newTaskpaneAddin.detail",
            localTemplate: "",
            framework: {
                default_old: {
                    typescript: "https://aka.ms/teams-toolkit/office-addin-taskpane",
                },
                default: {
                    typescript: "https://aka.ms/teams-toolkit/office-addin-taskpane/ts-default",
                    javascript: "https://aka.ms/teams-toolkit/office-addin-taskpane/js-default",
                },
                react: {
                    typescript: "https://aka.ms/teams-toolkit/office-addin-taskpane/ts-react",
                    javascript: "https://aka.ms/teams-toolkit/office-addin-taskpane/js-react",
                },
            },
            manifestPath: "manifest.json",
        },
        "office-content-addin": {
            title: "core.newContentAddin.label",
            detail: "core.newContentAddin.detail",
            localTemplate: "",
            framework: {
                default: {
                    typescript: "https://aka.ms/teams-toolkit/office-addin-content/ts-default",
                    javascript: "https://aka.ms/teams-toolkit/office-addin-content/js-default",
                },
            },
            manifestPath: "manifest.json",
        },
    },
    word: {
        "word-taskpane": Object.assign({ localTemplate: "word-taskpane" }, CommonProjectConfig.taskpane),
        "word-sso": Object.assign({ title: "core.createProjectQuestion.officeXMLAddin.word.sso.title", detail: "core.createProjectQuestion.officeXMLAddin.word.sso.detail", localTemplate: "word-sso" }, CommonProjectConfig.sso),
        "word-react": Object.assign({ title: "core.createProjectQuestion.officeXMLAddin.word.react.title", detail: "core.createProjectQuestion.officeXMLAddin.word.react.detail", localTemplate: "word-react" }, CommonProjectConfig.react),
        "word-manifest": Object.assign({ localTemplate: "word-manifest-only" }, CommonProjectConfig.manifest),
    },
    excel: {
        "excel-taskpane": Object.assign({ localTemplate: "excel-taskpane" }, CommonProjectConfig.taskpane),
        "excel-sso": Object.assign({ title: "core.createProjectQuestion.officeXMLAddin.excel.sso.title", detail: "core.createProjectQuestion.officeXMLAddin.excel.sso.detail", localTemplate: "excel-sso" }, CommonProjectConfig.sso),
        "excel-react": Object.assign({ title: "core.createProjectQuestion.officeXMLAddin.excel.react.title", detail: "core.createProjectQuestion.officeXMLAddin.excel.react.detail", localTemplate: "excel-react" }, CommonProjectConfig.react),
        "excel-custom-functions-shared": {
            title: "core.createProjectQuestion.officeXMLAddin.excel.cf.shared.title",
            detail: "core.createProjectQuestion.officeXMLAddin.excel.cf.shared.detail",
            localTemplate: "excel-cf",
            framework: {
                default: {
                    typescript: "https://aka.ms/ccdevx-fx-cf-shared-ts",
                    javascript: "https://aka.ms/ccdevx-fx-cf-shared-js",
                },
            },
        },
        "excel-custom-functions-js": {
            title: "core.createProjectQuestion.officeXMLAddin.excel.cf.js.title",
            detail: "core.createProjectQuestion.officeXMLAddin.excel.cf.js.detail",
            localTemplate: "excel-cf",
            framework: {
                default: {
                    typescript: "https://aka.ms/ccdevx-fx-cf-js-ts",
                    javascript: "https://aka.ms/ccdevx-fx-cf-js-js",
                },
            },
        },
        "excel-manifest": Object.assign({ localTemplate: "excel-manifest-only" }, CommonProjectConfig.manifest),
    },
    powerpoint: {
        "powerpoint-taskpane": Object.assign({ localTemplate: "powerpoint-taskpane" }, CommonProjectConfig.taskpane),
        "powerpoint-sso": Object.assign({ localTemplate: "powerpoint-sso", title: "core.createProjectQuestion.officeXMLAddin.powerpoint.sso.title", detail: "core.createProjectQuestion.officeXMLAddin.powerpoint.sso.detail" }, CommonProjectConfig.sso),
        "powerpoint-react": Object.assign({ localTemplate: "powerpoint-react", title: "core.createProjectQuestion.officeXMLAddin.powerpoint.react.title", detail: "core.createProjectQuestion.officeXMLAddin.powerpoint.react.detail" }, CommonProjectConfig.react),
        "powerpoint-manifest": Object.assign({ localTemplate: "powerpoint-manifest-only" }, CommonProjectConfig.manifest),
    },
};
function getOfficeAddinTemplateConfig(projectType, addinHost) {
    if (projectType === question_1.ProjectTypeOptions.officeXMLAddin().id &&
        addinHost &&
        addinHost !== question_1.OfficeAddinHostOptions.outlook().id) {
        return exports.OfficeAddinProjectConfig[addinHost];
    }
    return exports.OfficeAddinProjectConfig["json"];
}
exports.getOfficeAddinTemplateConfig = getOfficeAddinTemplateConfig;
//# sourceMappingURL=projectConfig.js.map